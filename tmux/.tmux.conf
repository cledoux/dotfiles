# Modeline and Header {{{
# vim: set foldmarker={{{,}}} foldmethod=marker foldlevel=0 spell: 
#
#   Author: Charles LeDoux
#
#   Personal tmux configuration file.
#
#   This file is in the public domain.
#
#   Suggestions and bugs can be emailed to charles@charlesledoux.com
# }}}

# Set prefix {{{
# act like GNU screen
# Disabling because I got used to the C-b prefix when on gcloud.
# It's just easier to stick with the defaults.
# 
# unbind C-b
# set -g prefix C-a
# bind-key C-a send-prefix
# }}}

# Solarized Dark Colorsheme {{{
# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
#### COLOUR (Solarized 256)
# default statusbar colors
# set-option -g status-bg colour235 #base02
# set-option -g status-fg colour136 #yellow
# set-option -g status-attr default
# # default window title colors
# set-window-option -g window-status-fg colour244 #base0
# set-window-option -g window-status-bg default
# #set-window-option -g window-status-attr dim
# # active window title colors
# set-window-option -g window-status-current-fg colour166 #orange
# set-window-option -g window-status-current-bg default
# #set-window-option -g window-status-current-attr bright
# # pane border
# set-option -g pane-border-fg colour235 #base02
# set-option -g pane-active-border-fg colour240 #base01
# # message text
# set-option -g message-bg colour235 #base02
# set-option -g message-fg colour166 #orange
# # pane number display
# set-option -g display-panes-active-colour colour33 #blue
# set-option -g display-panes-colour colour166 #orange
# # clock
# set-window-option -g clock-mode-colour colour64 #green
# }}}

# Configure mouse {{{

set -g mouse on
set -g @prevent-scroll-for-fullscreen-alternate-buffer "on"

# }}}

# Act Like Vim {{{
# Use vim keybindings
setw -g mode-keys vi
set-option -g status-keys vi
bind-key -t vi-copy v begin-selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"
# }}}

# Enable Ctrl+Arrow Keys
set-window-option -g xterm-keys on

# Open new windows in current directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Window Numbering {{{
# Make window numbering 1 index
set -g base-index 1
set-window-option -g pane-base-index 1
# renumber windows sequentially after closing any of them
set -g renumber-windows on
# }}}

# Powerline  {{{

# Assumes powerline installed only one method.
# Pip or apt, not both

# POWERLINE_CONF="/usr/share/powerline/bindings/tmux/powerline.conf"
POWERLINE_CONF="/home/cal1211/local/opt/anaconda3/lib/python3.5/site-packages/powerline/bindings/tmux/powerline.conf"

source $POWERLINE_CONF

# }}}

# Local config
# if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

# tmux-resurrect options {{{

# Processes to automatically resurrect.
# ~autossh
#   Restore any autossh commands
#   You have to use the -M option for this to work.
#   Example: autossh -M 21021 hometunnel
#   Otherwise the resurrected command will fail. Reason is because
#   /usr/bin/autossh is a wrapper script that generated a random port
#   if none provided. resurrect uses binary directly, not wrapper script.
# ~tmux-resurrect
#   Any script names tmux-resurrect* will be executed on resurrection. 
#   This makes it easy to relaunch complicated processes on resurrection.
#   Simply write a script that launches the process and name the script
#   tmux-resurrect-process-name.sh
set -g @resurrect-processes '~autossh ~tmux-resurrect'
# Change the directory for resurrect
set -g @resurrect-dir "$HOME/.tmux-resurrect/"
# Automatically restore on tmux start
set -g @continuum-restore 'on'
# Restore vim sessions
set -g @resurrect-strategy-vim 'session'
# Restore Pane contents
set -g @resurrect-capture-pane-contents 'on'
# }}}

# This must always be at the bottom
# Tmux Plugin Manager {{{

# Better defaults.
set -g @plugin 'tmux-plugins/tmux-sensible'

# Better copy-paste
set -g @plugin 'tmux-plugins/tmux-yank'

# Better search
set -g @plugin 'tmux-plugins/tmux-copycat'

# Open highlighted file with `o`
set -g @plugin 'tmux-plugins/tmux-open'

# Better session management
set -g @plugin 'tmux-plugins/tmux-sessionist'

# Save and restore tmux sessions.
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Restore pre-2.1 mouse behavior
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
set -g @plugin 'tmux-plugins/tpm'
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"
run '~/.tmux/plugins/tpm/tpm'
# }}}
